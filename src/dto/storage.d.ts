/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface definitions {
  /** Minimal error representation. */
  'minimal-error': {
    self: definitions['error'];
  };
  /** Error representation. */
  error: {
    /** Error message. */
    message: string;
    /** Error code. */
    code: string;
  };
  /** URLs for redoing the current request, getting to the previous or next page of results, if applicable containg, and retrieving root folder. */
  'links-paging-with-folder-link': {
    self: definitions['link'];
    next: definitions['link'];
    prev: definitions['link'];
    folder: definitions['link'];
  };
  /** URLs for redoing the current request, getting to the previous or next page of results, if applicable containg. */
  'links-paging': {
    self: definitions['link'];
    next: definitions['link'];
    prev: definitions['link'];
  };
  /** Hyperlink container. */
  link: {
    /** Hyperlink to the specific entity. */
    href: string;
  };
  /** Retrieved folder response containing folder. */
  'folder-response': {
    folder: definitions['folder'];
  };
  /** Full representation of the folder. */
  folder: {
    /** Unique Identifier of the folder. */
    id: string;
    /** Display name of the folder. */
    displayName: string;
    /** Description of the folder. */
    description: string;
    /** Absolute path to the folder. */
    path: string;
    /** Unique identifier of the user who created folder. */
    createdBy: string;
    /** Unique identifier of the user who modified folder last time. */
    lastModifiedBy: string;
    /** Date when the folder was created. */
    createdDateTime: string;
    /** Date when the folder was last time modified. */
    lastModifiedDateTime: string;
    /** Unique Identifier of the parent folder. */
    parentFolderId: string;
  };
  /** Full representation of the folder with folder type. */
  'folder-typed': {
    /** Unique Identifier of the folder. */
    id: string;
    /** Identification of the folder entity. */
    type: 'folder';
    /** Display name of the folder. */
    displayName: string;
    /** Description of the folder. */
    description: string;
    /** Absolute path to the folder. */
    path: string;
    /** Unique identifier of the user who created folder. */
    createdBy: string;
    /** Unique identifier of the user who modified folder last time. */
    lastModifiedBy: string;
    /** Date when the folder was created. */
    createdDateTime: string;
    /** Date when the folder was last time modified. */
    lastModifiedDateTime: string;
    /** Unique Identifier of the parent folder. */
    parentFolderId: string;
  };
  /** Model for folder creation. */
  'folder-create': {
    /** Display name of the folder. */
    displayName: string;
    /** Description of the folder. */
    description: string;
  };
  /** Model for folder update. */
  'folder-update': {
    /** Display name of the folder. */
    displayName: string;
    /** Description of the folder. */
    description: string;
  };
  /** List of folders. */
  folders: {
    /** List of folders. */
    folders: definitions['folder'][];
    _links: definitions['links-paging'];
  };
  /** Retrieved file response containing file. */
  'file-response': {
    file: definitions['file'];
  };
  file: {
    /** Unique Identifier of the file. */
    id: string;
    /** Display name of the file. */
    displayName: string;
    /** Description of the file. */
    description: string;
    /** Absolute path to the file. */
    path: string;
    /** Size to the file in bytes. */
    size: number;
    /** Unique identifier of the user who created file. */
    createdBy: string;
    /** Unique identifier of the user who modified file last time. */
    lastModifiedBy: string;
    /** Date when the file was created. */
    createdDateTime: string;
    /** Date when the file was last time modified. */
    lastModifiedDateTime: string;
    /** Unique Identifier of the parent folder. */
    parentFolderId: string;
  };
  'file-typed': {
    /** Unique Identifier of the file. */
    id: string;
    /** Identification of the file entity. */
    type: 'file';
    /** Display name of the file. */
    displayName: string;
    /** Description of the file. */
    description: string;
    /** Absolute path to the file. */
    path: string;
    /** Size to the file in bytes. */
    size: number;
    /** Unique identifier of the user who created file. */
    createdBy: string;
    /** Unique identifier of the user who modified file last time. */
    lastModifiedBy: string;
    /** Date when the file was created. */
    createdDateTime: string;
    /** Date when the file was last time modified. */
    lastModifiedDateTime: string;
    /** Unique Identifier of the parent folder. */
    parentFolderId: string;
  };
  /** Model for file creation. */
  'file-create': {
    /** Display name of the file. */
    displayName: string;
    /** Description of the file. */
    description: string;
  };
  /** Model for file update. */
  'file-update': {
    /** Display name of the file. */
    displayName: string;
    /** Description of the file. */
    description: string;
  };
  /** Model for file upload. */
  'file-upload': {
    _links: definitions['links-upload'];
  };
  /** Hyperlinks for further file upload and confirmation. */
  'links-upload': {
    uploadUrl: definitions['link'];
    completeUrl: definitions['link'];
  };
  /** List of files. */
  files: {
    files: definitions['file'][];
    _links: definitions['links-paging'];
  };
  /** List of folders and files. */
  items: {
    /** List of folders and files. */
    items: { [key: string]: unknown }[];
    _links: definitions['links-paging'];
  };
  'items-with-folder-link': {
    items: { [key: string]: unknown }[];
    _links: definitions['links-paging-with-folder-link'];
  };
}
